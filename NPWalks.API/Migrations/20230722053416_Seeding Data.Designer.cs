// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NPWalks.API.Data;

#nullable disable

namespace NPWalks.API.Migrations
{
    [DbContext(typeof(NPWalksDbContext))]
    [Migration("20230722053416_Seeding Data")]
    partial class SeedingData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NPWalks.API.Models.Domain.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Difficulties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c6324484-c5b4-49ae-8b5f-729bdd5ed166"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("8072210a-403e-4f60-a006-5c0fee7d5ab0"),
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("71a84ba7-1f6c-468e-b334-862fb89ca31e"),
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("NPWalks.API.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a9755b67-f022-4dc3-ad0d-03d7955fa75b"),
                            Code = "BTL",
                            Name = "Butwal",
                            RegionImageUrl = "https://en.wikipedia.org/wiki/Butwal#/media/File:Butwal.jpg"
                        },
                        new
                        {
                            Id = new Guid("14876ed1-621b-429f-8863-66cae8baeb15"),
                            Code = "KTM",
                            Name = "Shivapuri",
                            RegionImageUrl = "https://en.wikipedia.org/wiki/Shivapuri_Nagarjun_National_Park#/media/File:A_view_of_Shivapuri_national_park_from_Sundarijal.jpg"
                        },
                        new
                        {
                            Id = new Guid("2c2b2bf6-7611-4c2a-b6ad-63afb28c0fd4"),
                            Code = "TMGS",
                            Name = "Tamghas",
                            RegionImageUrl = "https://thegreathimalayas.files.wordpress.com/2015/04/resunga.jpg"
                        },
                        new
                        {
                            Id = new Guid("de86cc6a-026e-491b-ad10-52b15d266a66"),
                            Code = "PKH",
                            Name = "Pokhara",
                            RegionImageUrl = "https://images.pexels.com/photos/6822183/pexels-photo-6822183.jpeg"
                        });
                });

            modelBuilder.Entity("NPWalks.API.Models.Domain.Walk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("LengthInKm")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalkImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("NPWalks.API.Models.Domain.Walk", b =>
                {
                    b.HasOne("NPWalks.API.Models.Domain.Difficulty", "Diffculty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NPWalks.API.Models.Domain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Diffculty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
